In software engineering and computer science, 
abstraction is a technique for arranging complexity of computer systems. 
It works by establishing a level of complexity 
on which a person interacts with the system, 
suppressing the more complex details below the current level. 

The programmer works with an idealized interface (usually well defined) 
and can add additional levels of functionality 
that would otherwise be too complex to handle. 

For an example, a programmer writing code 
that involves numerical operations may not be interested 
in the way numbers are represented in the underlying hardware 
(e.g. whether they're 16 bit or 32 bit integers), and 
where those details have been suppressed it can be said 
that they were abstracted away, leaving simply numbers 
with which the programmer can work. 

In addition, a task of sending an email message across continents 
would be extremely complex if the programmer had to start 
with a piece of fiber optic cable and basic hardware components. 
By using layers of complexity that have been created to abstract away 
the physical cables and network layout, and presenting the programmer 
with a virtual data channel, this task is manageable.

